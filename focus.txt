           /**
      this.svg.append("rect")
         .attr("x", x)
         .attr("y", 0)
         .attr("width", width)
         .attr("height", height)
         .attr("fill", "grey")
         .attr("opacity", 0.2)
         .on("click", function(){
            d3.select("svg")
              .remove();
            team_season.drawGraph(team_season.team, team_season.year);
            team_season.focus(matches.slice(0, 5));
        }); 

      // Mid season
      if(this.yearSelected == 2011){
        width = xFunc(10) - xFunc(5);
      }
      else{
        width = xFunc(11) - xFunc(5);
      }
      x = xFunc(5);
      this.svg.append("rect")
         .attr("x", x)
         .attr("y", 0)
         .attr("width", width)
         .attr("height", height)
         .attr("fill", "black")
         .attr("opacity", 0.2)
         .on("click", function(){
            d3.select("svg")
              .remove();
            team_season.drawGraph(team_season.team, team_season.year);
            if(this.yearSelected == 2011){
              team_season.focus(matches.slice(4, 9));
            }
            else{
              team_season.focus(matches.slice(4, 10));
            }
        });  

      // End season
      if(this.yearSelected == 2011){
        x = xFunc(10);
        width = xFunc(13) - xFunc(9);
      }
      else{
        x = xFunc(11);
        width = (xFunc(14)+xFunc.rangeBand()+margin.right) - xFunc(11);
      }
      this.svg.append("rect")
         .attr("x", x)
         .attr("y", 0)
         .attr("width", width)
         .attr("height", height)
         .attr("fill", "grey")
         .attr("opacity", 0.2)
         .on("click", function(){
            d3.select("svg")
              .remove();
            team_season.drawGraph(team_season.team, team_season.year);
            if(this.yearSelected == 2011){
              team_season.focus(matches.slice(9, 13));
            }
            else{
              team_season.focus(matches.slice(10, 14));
            }
        });  
*/




/// SEASON BLOCKS EXTRA

      /**
      var matches = [];
      for(var i = 0; i<matchesArg.length; i++){
          var match = matchesArg[i];
          matches.push({matchno: i, scoreHome: match.scoreHome, scoreAway: match.scoreAway, homeTeam: match.homeTeam, awayTeam: match.awayTeam});
      }

      var margin = {top: 20, right: 20, bottom: 60, left: 40},
      width = 800 - margin.left - margin.right,
      height = 350 - margin.top - margin.bottom;

      var x = d3.scale.ordinal()
          .rangeRoundBands([0, width], .1);

      var y = d3.scale.linear()
          .range([height, 0]);

      var xAxis = d3.svg.axis()
          .scale(x)
          .orient("bottom");

      var yAxis = d3.svg.axis()
          .scale(y)
          .orient("left");

      this.focussvg = d3.select("body").append("svg")
          .attr("width", width + margin.left + margin.right)
          .attr("height", height + margin.top + margin.bottom)
        .append("g")
          .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

      var yMax = -1000;

      for(var j = 0; j<matches.length; j++){
         var match = matches[j];
         if(match.scoreHome > yMax){
              yMax = match.scoreHome;
         }
         if(match.scoreAway > yMax){
              yMax = match.scoreAway;
         }
      }

      for(var i = 0; i<matches.length; i++){
        console.log("Home Team: " + matches[i].homeTeam + "  Away Team: " + matches[i].awayTeam);
          x.domain(matches.map(function(d) {
              return d.matchno; 
          }));
          y.domain( [0, yMax]); // 2 is just a border
      }

      this.focussvg.append("g")
          .attr("class", "y axis")
          .call(yAxis)
        .append("text")
          .attr("transform", "rotate(-90)")
          .attr("y", 6)
          .attr("dy", ".71em")
          .style("text-anchor", "end")
          .text("Points");

      // First draw home scores
      for(var j = 0; j<matches.length; j++){
        var d = matches[j];
        width = (x.rangeBand()/2)- 5;
        var gap = 5;
        // Home Score
        this.focussvg.append("rect")
           .attr("class", "bar")
           .attr("x", x(d.matchno))
           .attr("width", width)
           .attr("y", y(d.scoreHome))
           .attr("height", (height - y(d.scoreHome)));

        // Away Score
        this.focussvg.append("rect")
           .attr("class", "bar")
           .attr("x", x(d.matchno) + width + gap)
           .attr("width", width)
           .attr("y", y(d.scoreAway))
           .attr("height", (height - y(d.scoreAway)));

      // The text to go on home bar
      var messageWidth = x.rangeBand()/2 - 10;

      this.focussvg.append("text")
         .attr('x', (x(d.matchno)+26))
         .attr('font-family', 'sans-serif')
         .attr('font-size', "20px")
         .attr('y', (y(d.scoreHome-6)))
         .attr("fill", "white")
         .text(d.scoreHome);

      // The text to go on the away bar
      var awayText = d.awayTeam + ": " + d.awayScore;
      this.focussvg.append("text")
         .attr('x', (x(d.matchno)+24+width+gap))
         .attr('y', (y(d.scoreAway-6)))
         .attr('font-family', 'sans-serif')
         .attr('font-size', "20px")
         .attr("fill", "white")
         .text(d.scoreAway);

      this.focussvg.append("text")
         .attr('font-family', 'sans-serif')
         .attr('font-size', "12px")
         .attr("fill", "white")
         .call(this.wrap, d.homeTeam.name, (x.rangeBand()/2)-6, 15)
         .attr("transform", "translate(" + (x(d.matchno)+3) + ", " + (y(d.scoreHome-8))+ ")");

      this.focussvg.append("text")
         .attr('font-family', 'sans-serif')
         .attr('font-size', "12px")
         .attr("fill", "white")
        .call(this.wrap, d.awayTeam.name, (x.rangeBand()/2)-6, 15)
         .attr("transform", "translate(" + (x(d.matchno)+2+width+gap) + ", " + (y(d.scoreAway-8))+ ")");
      }*/